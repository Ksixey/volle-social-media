{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/ProfileInfo/InputUpload/InputUpload.module.css","HOC/withAuthRedirect.js","API/api.js","etc/img/user.png","Components/reducers/DialogReducer/DialogReducer.js","Components/reducers/UserReducer/UserReducer.js","Components/Logo/Logo.module.css","etc/img/Eclipse-1s-200px.svg","Components/Common/FormControls/FormControls.js","etc/img/Volle.svg","Components/Nav-bar/Nav.module.css","Components/Logo/Logo.js","Components/Header/Header.js","Containers/HeaderContainer.js","Components/Nav-bar/Nav.js","Components/reducers/ProfileReducer/ProfileReducer.js","Components/Profile/MyPosts/Post/Post.js","Components/Dialogs/Forms/ProfileForm/ProfileForm.js","Components/Profile/MyPosts/MyPosts.js","Containers/MyPostContainer.js","Components/Profile/ProfileInfo/ProfileStatusWithHooks.js","Components/Dialogs/Forms/ProfileDataForm/ProfileDataForm.js","Components/Profile/ProfileInfo/InputUpload/InputUpload.js","Components/Profile/ProfileInfo/ProfileInfo.js","Components/Profile/Profile.js","Containers/ProfileContainer.js","Components/reducers/appReducer/appReducer.js","redux-store/store.js","HOC/withSuspence.js","App.js","serviceWorker.js","index.js","Components/Dialogs/Forms/FormMessage/FormMessage.module.css","Components/Dialogs/Forms/style.js","Components/reducers/AuthReducer/AuthReducer.js","Components/Header/Header.module.css","Helpers/validators/validators.js","Components/Profile/MyPosts/Post/Post.module.css","Components/Common/Preloader/Preloader.js","Components/Common/FormControls/FormControl.module.css","Components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","mapStateToProps","state","isAuth","auth","loginId","id","withAuthRedirect","Component","AuthRedirect","this","props","to","React","connect","instance","axios","withCredentials","baseURL","headers","userAPI","onPageChange","pageNumber","pageSize","get","then","response","data","getUsers","currentPage","followUser","userId","post","unfollowUser","delete","goToProfileFromId","console","warn","profileAPI","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaURL","getStatus","setNewStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","infoProfile","ADD_MESSAGE","initialState","message","dialog","name","DialogReducer","action","type","newMessage","addNewMessage","TOGGLE_FOLLOW","SET_USERS","SET_FETCHING","users","totalUsersCount","isFetching","followingInProcess","UserReducer","map","u","followed","count","inProcess","filter","toggleFollow","newCurrentPage","setIsFetching","setFollowingInProcess","dispatch","a","items","totalCount","followUnfollowFlow","apiMethod","resultCode","getUnfollowAC","bind","getFollowAC","FormControl","input","meta","touched","error","children","hasError","className","classes","formControl","Textarea","restProps","style","styleTextarea","styleTextareaDataProfile","Input","styleInput","createField","placeholder","validators","component","text","validate","Logo","imgHeader","Header","header","loginBlock","onClick","logoutButton","HeaderContainer","Nav","nav","ul","li","link","activeClassName","active","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SUCCESS_PHOTO","profile","updateProfile","setStatus","goToUserProfile","Post","item","imgWrapper","avatar","src","photos","large","alt","textPost","maxLength150","maxLength","ProfileForm","form","onSubmit","handleSubmit","buttonContainer","buttonSend","reduxForm","MyPosts","posts","index","key","postsContainer","addPost","postField","MyPostsContainer","profilePage","newPostMessage","newPost","idPost","ProfileStatusWithHooks","uploadNewStatus","useState","editMode","setEditMode","statusHook","useEffect","statusContainer","spanStatus","onDoubleClick","inputStatus","onChange","e","target","value","onBlur","autoFocus","maxLength30","maxLength100","ProfileDataForm","contacts","buttonContainerCenter","Object","keys","spanContacts","InputUpload","fileUpload","hide","files","length","htmlFor","Contact","contactTitle","contactValue","linkContact","href","ProfileInfo","Preloader","profileInfoContainer","photoContainer","UserPhoto","isOwner","initialValues","goToEditMode","ProfileData","allInfoContainer","buttonEdit","fullName","containerInforms","spanInfoSections","aboutMe","containerContact","lookingForAJob","lookingForAJobDescription","Profile","ProfileContainer","refreshProfile","match","params","profileId","history","push","prevProps","compose","isUth","file","getState","messages","slice","indexOf","toLowerCase","stopSubmit","Promise","reject","withRouter","initialized","rootReducer","combineReducers","dialogPage","usersPage","AuthUserReducer","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withSuspence","fallback","DialogContainer","lazy","UserContainer","Login","App","initializeApp","path","render","AppContainer","promise","getAuth","all","initialize","AppNetwork","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","border","width","color","borderRadius","padding","resize","margin","AUTH_USER","GET_CAPTCHA","captchaURL","payload","setAuthUser","responce","getCaptchaURLSuccess","_error","url","required","undefined","max","preloader"],"mappings":"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","file":"static/js/main.f956a05e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoContainer\":\"ProfileInfo_profileInfoContainer__VmW88\",\"photoContainer\":\"ProfileInfo_photoContainer__1OD87\",\"fullName\":\"ProfileInfo_fullName__12NlL\",\"linkContainer\":\"ProfileInfo_linkContainer__1I7yl\",\"linkSite\":\"ProfileInfo_linkSite__6rBYE\",\"containerInforms\":\"ProfileInfo_containerInforms__1IQy3\",\"allInfoContainer\":\"ProfileInfo_allInfoContainer__3HH8K\",\"buttonEdit\":\"ProfileInfo_buttonEdit__3XRRv\",\"containerContact\":\"ProfileInfo_containerContact__1eWs0\",\"linkContact\":\"ProfileInfo_linkContact___wUQ9\",\"spanInfoSections\":\"ProfileInfo_spanInfoSections__vBWok\",\"statusContainer\":\"ProfileInfo_statusContainer__1-q_N\",\"spanStatus\":\"ProfileInfo_spanStatus__3zMy4\",\"inputStatus\":\"ProfileInfo_inputStatus__3u7cr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fileUpload\":\"InputUpload_fileUpload__1eTLr\",\"hide\":\"InputUpload_hide__OGR0O\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        loginId: state.auth.id\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class AuthRedirect extends React.Component{\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(AuthRedirect)\r\n};","import * as axios from \"axios\";\r\n\r\n//создаем инстанс класса, чтобы мы моогли подключать к разным апи и настроить испоользование этих апи\r\nconst instance = axios.create({\r\n    withCredentials:true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0\",\r\n    headers: {\r\n        \"API-KEY\": \"9c158c0d-00d9-49b9-86ad-74cfbae13a5e\"\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    onPageChange(pageNumber,pageSize) {\r\n        return instance.get(`/users?page=${pageNumber}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    getUsers(currentPage,pageSize) {\r\n        return instance.get(`/users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    followUser(userId){\r\n        return instance.post(`/follow/${userId}`).then(response => response.data)\r\n    },\r\n\r\n    unfollowUser(userId){\r\n        return instance.delete(`/follow/${userId}`).then(response => response.data)\r\n    },\r\n\r\n    goToProfileFromId(userId){\r\n        console.warn('Old methosd. Use profileAPI Object');\r\n        return profileAPI.goToProfileFromId(userId);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me(){\r\n        return instance.get('/auth/me').then(response => response.data)\r\n    },\r\n    login(email,password,rememberMe = false,captcha){\r\n        return instance.post('/auth/login', {email,password,rememberMe,captcha}).then(response => response.data)\r\n    },\r\n    logout(){\r\n        return instance.delete('/auth/login').then(response => response.data)\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaURL(){\r\n        return instance.get(`/security/get-captcha-url`).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    goToProfileFromId(userId){\r\n        return instance.get(`/profile/${userId}`).then(response => response.data)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`/profile/status/${userId}`).then(response => response.data)\r\n    },\r\n    setNewStatus(status){\r\n        return instance.put(`/profile/status`, {status:status}).then(response => response.data)\r\n    },\r\n    savePhoto(photoFile){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`/profile/photo`, formData, {\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n        }).then(response=> response.data)\r\n    },\r\n    saveProfile(infoProfile){\r\n        return instance.put('/profile', infoProfile).then(response => response.data)\r\n    }\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/user.f8a15e74.png\";","const ADD_MESSAGE = 'network/dialog/ADD_MESSAGE';\r\n\r\nconst initialState = {\r\n    message : [\r\n\r\n    ],\r\n\r\n    dialog : [\r\n        {id: 1, name: 'Xenia'},\r\n        {id: 2, name: 'Ihor'},\r\n        {id: 3, name: 'Natalia'},\r\n        {id: 4, name: 'Den'},\r\n        {id: 5, name: 'Lena'}\r\n    ],\r\n};\r\n\r\nexport const DialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE :\r\n            let message = action.newMessage;\r\n            let newMessage =  {id:4, message: message};\r\n            return {...state,\r\n                message:[...state.message, newMessage]};\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const addNewMessage = (newMessage) => ({type:ADD_MESSAGE, newMessage});\r\n\r\n\r\n","import {userAPI} from \"../../../API/api\";\r\n\r\nconst TOGGLE_FOLLOW = 'network/user/TOGGLE_FOLLOW';\r\nconst SET_USERS = 'network/user/SET_USERS';\r\nconst NEW_CURRENT_PAGE = 'network/user/NEW_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'network/user/SET_TOTAL_USERS_COUNT';\r\nconst SET_FETCHING = 'network/user/SET_FETCHING';\r\nconst FOLLOWING_IN_PROGRESS = 'network/user/FOLLOWING_IN_PROGRESS';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProcess: []\r\n};\r\n\r\nexport const UserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_FOLLOW:\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if(u.id === action.userId){\r\n                        return {...u, followed: !u.followed}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {...state,users: action.users};\r\n        case NEW_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count};\r\n        case SET_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case FOLLOWING_IN_PROGRESS:\r\n        return {...state,\r\n            followingInProcess: action.inProcess\r\n            ? [...state.followingInProcess, action.userId]\r\n            : state.followingInProcess.filter(id => id !== action.userId)\r\n        };\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const setUsers = (users) => ({type:SET_USERS, users});\r\nexport const toggleFollow = (userId) => ({type:TOGGLE_FOLLOW, userId});\r\nexport const newCurrentPage = (currentPage) => ({type:NEW_CURRENT_PAGE,currentPage});\r\nexport const setTotalUsersCount = (count) => ({type:SET_TOTAL_USERS_COUNT, count});\r\nexport const setIsFetching = (isFetching) => ({type:SET_FETCHING, isFetching});\r\nexport const setFollowingInProcess = (inProcess,userId) => ({type: FOLLOWING_IN_PROGRESS, inProcess,userId});\r\n\r\nexport const getUsers = (currentPage, pageSize) => async (dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n        let response = await userAPI.getUsers(currentPage, pageSize)\r\n            dispatch(setIsFetching(false));\r\n            dispatch(setUsers(response.items));\r\n            dispatch(setTotalUsersCount(response.totalCount))\r\n        };\r\n\r\nconst followUnfollowFlow = async(dispatch, userId, apiMethod) => {\r\n\r\n    dispatch(setFollowingInProcess(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.resultCode === 0) {\r\n        dispatch(toggleFollow(userId))\r\n    }\r\n    dispatch(setFollowingInProcess(false,userId));   \r\n};\r\n\r\nexport const getUnfollowAC = (userId) => async(dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, userAPI.unfollowUser.bind(userAPI))\r\n};\r\n\r\nexport const getFollowAC = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, userAPI.followUser.bind(userAPI))\r\n    };\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgHeader\":\"Logo_imgHeader__1iJee\"};","module.exports = __webpack_public_path__ + \"static/media/Eclipse-1s-200px.b5f79819.svg\";","import React from \"react\";\r\nimport classes from './FormControl.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst FormControl = ({input,meta: {touched, error},children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return <div className={classes.formControl + ' ' + (hasError && classes.error)}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        {hasError && <span className={classes.error}>{error}</span>}\r\n    </div>\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input,meta, ...restProps} = props;\r\n    return <FormControl{...props}>\r\n        <textarea style={restProps.styleTextarea || restProps.styleTextareaDataProfile}{...input} {...restProps}/>\r\n    </FormControl>\r\n\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input,meta, ...restProps} = props;\r\n    return <FormControl {...props}><input style={restProps.styleInput } {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text= \"\") => (\r\n<div>\r\n    <Field placeholder={placeholder} name={name} validate={validators} component = {component}\r\n    {...props}/> {text}\r\n</div>\r\n)","module.exports = __webpack_public_path__ + \"static/media/Volle.5fe4987c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3KQtp\",\"ul\":\"Nav_ul__1M_YV\",\"li\":\"Nav_li__2d9so\",\"link\":\"Nav_link__huxO3\",\"active\":\"Nav_active__38UIb\"};","import React from 'react';\r\nimport classes from './Logo.module.css'\r\nimport Volle from '../../etc/img/Volle.svg'\r\n\r\nexport const Logo = () => {\r\n    return <div className={classes.imgHeader} />\r\n};","import React from 'react';\r\nimport classes from './Header.module.css'\r\nimport {Logo} from \"../Logo/Logo\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <Logo />\r\n            <div className={classes.loginBlock}>\r\n                {props.isAuth? <div>\r\n                    <p className={classes.login}>{props.login}</p>\r\n                    <button onClick={props.logout} className={classes.logoutButton}>Logout</button>\r\n                </div> : <NavLink className={classes.login} to='/login'>Sign to</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport Header from \"../Components/Header/Header\";\r\nimport {connect} from 'react-redux'\r\nimport {logout} from \"../Components/reducers/AuthReducer/AuthReducer\";\r\n\r\nclass HeaderContainer extends Component{\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=> {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","import React from 'react';\r\nimport classes from './Nav.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <ul className={classes.ul}>\r\n                <li className={classes.li}>\r\n                    <NavLink to=\"/profile\" className={classes.link} activeClassName={classes.active}>\r\n                        Profile\r\n                    </NavLink>\r\n                </li>\r\n                <li className={classes.li} >\r\n                    <NavLink to=\"/dialogs\" className={classes.link} activeClassName={classes.active}>\r\n                        Messages\r\n                    </NavLink>\r\n                </li>\r\n                <li className={classes.li}>\r\n                    <NavLink to=\"/user\" className={classes.link} activeClassName={classes.active}>\r\n                        Users\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Nav;","import {profileAPI, userAPI} from \"../../../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'network/profile/ADD_POST';\r\nconst DELETE_POST = 'network/profile/DELETE_POST';\r\nconst SET_USER_PROFILE = 'network/profile/SET_USER_PROFILE';\r\nconst SET_STATUS ='network/profile/SET_STATUS';\r\nconst SUCCESS_PHOTO = 'network/profile/SUCCESS_PHOTO'\r\nconst UPDATE_PROFILE = 'network/profile/UPDATE_PROFILE'\r\n\r\nconst initialState = {\r\n        post : [],\r\n        profile: null,\r\n        status: '',\r\n        updateProfile:null\r\n};\r\n\r\nexport const ProfileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST :\r\n            let message = action.newPost;\r\n            let idPost = action.idPost \r\n            let newMessage = {id: idPost , message: message};\r\n            return {...state,\r\n                post : [...state.post, newMessage]};\r\n        case DELETE_POST:\r\n                return {...state, post: state.post.filter(post => post.id !== action.idPost)}\r\n        case SET_USER_PROFILE :\r\n            return {...state,profile: action.profile};\r\n        case SET_STATUS:\r\n            return {...state, status: action.status};\r\n        case SUCCESS_PHOTO:\r\n            return {...state, profile: {...state.profile, photos: action.photos}};\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPost, idPost) => ({type: ADD_POST, newPost, idPost});\r\nexport const deletePost = (idPost) => ({type: DELETE_POST, idPost})\r\nexport const setUserProfile = (profile) => ({type:SET_USER_PROFILE, profile});\r\nconst savePhotoSuccess = (photos) =>({type: SUCCESS_PHOTO, photos});\r\nconst setStatus = (status) => ({type:SET_STATUS, status});\r\n\r\nexport const goToUserProfile = (userId) => async (dispatch) => {\r\n        let response = await userAPI.goToProfileFromId(userId)\r\n        dispatch(setUserProfile(response));\r\n    };\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response =  await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response))\r\n};\r\n\r\nexport const uploadNewStatus = (status) => async (dispatch) =>{\r\n    let response = await profileAPI.setNewStatus(status)\r\n        if(response.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n    }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) =>{\r\n    let response = await profileAPI.savePhoto(file);\r\n    if(response.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.photos))\r\n    }\r\n};\r\n\r\nexport const saveProfile = (data) => async (dispatch,getState) =>{\r\n    const userId = getState().auth.id;\r\n    let response = await profileAPI.saveProfile(data);\r\n    if(response.resultCode === 0) {\r\n        dispatch(goToUserProfile(userId))\r\n    }else{\r\n        let message = response.messages[0].slice(response.messages[0].indexOf(\">\") + 1,\r\n        response.messages[0].indexOf(\")\")).toLowerCase()\r\n        dispatch(stopSubmit(\"changeProfile\", {\"contacts\":{\r\n            [message] : response.messages[0]\r\n        } }))\r\n        return Promise.reject(response.messages[0])\r\n    }\r\n};","import React from \"react\";\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = ({profile, text}) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <div className={classes.imgWrapper}>\r\n                <img className={classes.avatar} src={profile.photos.large} alt=\"photoUser\"/>\r\n            </div>\r\n            <div className={classes.textPost}>{text}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {maxLength} from \"../../../../Helpers/validators/validators\";\r\nimport {Textarea} from \"../../../Common/FormControls/FormControls\";\r\nimport {createField} from \"../../../Common/FormControls/FormControls\";\r\nimport {styleTextarea} from '../style'\r\nimport classes from '../FormMessage/FormMessage.module.css'\r\n\r\nconst maxLength150 = maxLength(150);\r\n\r\nlet ProfileForm = (props) => {\r\n    return <form className={classes.form} onSubmit={props.handleSubmit}>\r\n        {createField(\"Enter your post...\", \"postField\", [maxLength150],Textarea,{styleTextarea})}\r\n        <div className={classes.buttonContainer}>\r\n            <button className={classes.buttonSend}>Publish text</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nProfileForm = reduxForm({\r\n    form: 'newPost'\r\n})(ProfileForm);\r\n\r\nexport default ProfileForm;","import React, {Component} from 'react';\r\nimport Post from \"./Post/Post\";\r\nimport classes from './MyPosts.module.css'\r\nimport ProfileForm from \"../../Dialogs/Forms/ProfileForm/ProfileForm\";\r\n\r\n\r\nclass MyPosts extends Component {\r\n    render() {\r\n    const posts =this.props.post.map((item,index) => {\r\n        return <Post profile={this.props.profile} key={index + item.id } text={item.message}/>\r\n    });\r\n\r\n\r\nconst addNewPost = (post) =>{\r\n    this.props.addPost(post.postField, 1)\r\n};\r\n\r\nreturn (\r\n        <div className={classes.postsContainer}>\r\n            <ProfileForm onSubmit={addNewPost}/>\r\n            <div className={classes.post}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n)\r\n   }\r\n};\r\nexport default MyPosts;","import {addPost} from \"../Components/reducers/ProfileReducer/ProfileReducer\";\r\nimport MyPosts from \"../Components/Profile/MyPosts/MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        post: state.profilePage.post,\r\n        newPostMessage:state.profilePage.newPostMessage,\r\n        profile:state.profilePage.profile\r\n    }\r\n};\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,{\r\n    addPost\r\n})(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect} from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\n\r\nexport const ProfileStatusWithHooks = ({ status, uploadNewStatus, userId}) => {\r\n\r\n            let [editMode, setEditMode] = useState(false);\r\n            let [statusHook, setStatus] = useState(status);\r\n\r\n            useEffect(() => {\r\n                setStatus(status)\r\n            },[status])\r\n\r\n            const activateMode = () => {\r\n                setEditMode(true)\r\n            }\r\n\r\n            const diactivateMode = () => {\r\n                setEditMode(false);\r\n                uploadNewStatus(statusHook)\r\n            }\r\n\r\n            const onStatusChange = (e) => {\r\n                setStatus(e.target.value)\r\n            }\r\n\r\n            return <div className={classes.statusContainer}>\r\n                {!editMode &&\r\n                    <span className={classes.spanStatus} onDoubleClick= {!userId && activateMode} >\r\n                    {status || 'У вас нет статуса'}\r\n                    </span> }\r\n                {editMode &&\r\n                        <span>\r\n                    <input className={classes.inputStatus}\r\n                        onChange={onStatusChange}\r\n                        value={statusHook}\r\n                        onBlur={diactivateMode}\r\n                        autoFocus={true}\r\n                        type=\"text\"/>\r\n                    </span>\r\n                }\r\n\r\n            </div>\r\n    };\r\n\r\n","import React from 'react';\r\nimport {reduxForm} from 'redux-form';\r\nimport {Input, Textarea, createField} from '../../../Common/FormControls/FormControls'\r\nimport {maxLength} from '../../../../Helpers/validators/validators'\r\nimport {styleInput, styleTextareaDataProfile}  from '../style'\r\nimport classes from '../FormMessage/FormMessage.module.css'\r\n\r\nlet maxLength30 = maxLength(30);\r\nlet maxLength100 = maxLength(100);\r\n\r\nlet ProfileDataForm = ({handleSubmit, contacts, error}) => {\r\n    return <form className={classes.form} onSubmit={handleSubmit}>\r\n            <div className={classes.buttonContainerCenter}>\r\n                <button className={classes.buttonSend}>Submit</button>\r\n            </div>\r\n            \r\n            {error && <p>{error}</p>}\r\n            <div>\r\n                <span>Change fullname : </span> {createField(\"Your name...\", \"fullName\", [maxLength30], Input, {styleInput} )}\r\n            </div>\r\n            <div>\r\n                <span>Looking for a job : </span> {createField(null, \"lookingForAJob\", [], Input, {type: 'checkbox'} )}\r\n            </div>\r\n            <div>\r\n                <span>Describe your professional skills : </span> {createField(\"Your skills\", \"lookingForAJobDescription\", [maxLength100], Textarea, {styleTextareaDataProfile})}\r\n            </div>\r\n            <div>\r\n                <span>Tell about yourself : </span> {createField(\"Tell about yourself...\", \"aboutMe\", [maxLength100], Textarea, {styleTextareaDataProfile} )}\r\n            </div>\r\n            {Object.keys(contacts).map(key=> {\r\n                    return <div>\r\n                        <span className={classes.spanContacts} >{key}</span> \r\n                    {createField(key,\"contacts.\" + key, [], Input, {styleInput})}\r\n                    </div> \r\n                })}\r\n    </form>\r\n}\r\n\r\nProfileDataForm=reduxForm({\r\n    form:'changeProfile'\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataForm;","import React from \"react\";\r\nimport classes from './InputUpload.module.css'\r\n\r\nexport const InputUpload = ({savePhoto}) => {\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length){\r\n            savePhoto(e.target.files[0])\r\n        };\r\n    }\r\n\r\n    return <div className={classes.fileUpload}>\r\n        <input type={\"file\"} className={classes.hide} id=\"upload\" onChange={onMainPhotoSelected}/>\r\n        <label htmlFor=\"upload\">Upload new photo</label>\r\n    </div>\r\n}","import React, {useState} from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\nimport {Preloader} from \"../../Common/Preloader/Preloader\";\r\nimport UserPhoto from '../../../etc/img/user.png';\r\nimport {ProfileStatusWithHooks} from './ProfileStatusWithHooks'\r\nimport ProfileDataForm from '../../Dialogs/Forms/ProfileDataForm/ProfileDataForm'\r\nimport {InputUpload} from './InputUpload/InputUpload'\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\nreturn <a className={classes.linkContact} href={contactValue}>{contactTitle}</a> \r\n}\r\n\r\nexport const ProfileInfo = ({profile, saveProfile,  ...props}) => {    \r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return  <Preloader/>\r\n    }\r\n\r\nconst changeProfile= (data) => {\r\n            saveProfile(data).then(() => {setEditMode(false) })\r\n    }\r\n\r\n    return <div className={classes.profileInfoContainer}>\r\n        <img className={classes.photoContainer} src={profile.photos.large || UserPhoto } alt=\"\"/>\r\n        { props.isOwner && <InputUpload savePhoto={props.savePhoto} /> }\r\n        {editMode  ? <ProfileDataForm contacts={profile.contacts} initialValues={profile} onSubmit={changeProfile}/> : <ProfileData profile={profile} goToEditMode={()=>setEditMode(true)} isOwner= {props.isOwner}/>}\r\n        <div >\r\n            <ProfileStatusWithHooks status={props.status} uploadNewStatus={props.uploadNewStatus} userId={props.userId} />\r\n        </div>\r\n    </div>\r\n    \r\n} ;\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return  <div className={classes.allInfoContainer}>\r\n        {isOwner && <button onClick={goToEditMode} className={classes.buttonEdit}>Edit profile</button> }\r\n        <p className={classes.fullName}>{profile.fullName}</p>\r\n        <div  className={classes.containerInforms}><span className={classes.spanInfoSections} >Info about: </span><span>{profile.aboutMe}</span></div>\r\n        <div className={classes.containerContact}>\r\n            {Object.keys(profile.contacts).map(key=> {\r\n                if(!profile.contacts[key]){\r\n                    return\r\n                }\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                \r\n            })}\r\n        </div>\r\n        <div className={classes.containerInforms}>\r\n            <span className={classes.spanInfoSections} >Job status:</span> {profile.lookingForAJob\r\n            ? <span>Looking for job</span>\r\n            : <span>Work in the company</span>}\r\n        </div>\r\n        <div  className={classes.containerInforms}>\r\n            <span className={classes.spanInfoSections}>Work skills:</span> <span>{profile.lookingForAJobDescription}</span>\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"../../Containers/MyPostContainer\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n   \r\n    return (\r\n        <>\r\n        <ProfileInfo {...props }  />\r\n        {!props.userId && <MyPostsContainer  />}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Profile","import React, {Component} from \"react\";\r\nimport Profile from \"../Components/Profile/Profile\";\r\nimport {connect} from 'react-redux'\r\nimport {goToUserProfile, getStatus,uploadNewStatus, savePhoto, saveProfile} from \"../Components/reducers/ProfileReducer/ProfileReducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nexport class ProfileContainer extends Component{\r\n    \r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId ) {\r\n            userId = this.props.profileId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.goToUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile \r\n        userId={this.props.match.params.userId}\r\n        {...this.props}\r\n        isOwner = {!this.props.match.params.userId}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        profileId: state.auth.id,\r\n        isUth: state.auth.isAuth,\r\n        status: state.profilePage.status,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {goToUserProfile, getStatus, uploadNewStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);","import {getAuth} from \"../AuthReducer/AuthReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'network/app/INITIALIZED_SUCCESS';\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n};\r\n\r\nexport const AppReducer = (state=initialState,action) =>  {\r\n    switch (action.type) {\r\n        case  INITIALIZED_SUCCESS:\r\n            return {...state, initialized: true};\r\n        default: return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setInitialize = (initialize) => ({type:INITIALIZED_SUCCESS, initialize});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuth());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(setInitialize())\r\n    })\r\n};","import {applyMiddleware, combineReducers,compose, createStore} from \"redux\";\r\nimport {ProfileReducer} from \"../Components/reducers/ProfileReducer/ProfileReducer\";\r\nimport {DialogReducer} from \"../Components/reducers/DialogReducer/DialogReducer\";\r\nimport {UserReducer} from \"../Components/reducers/UserReducer/UserReducer\";\r\nimport {AuthUserReducer} from \"../Components/reducers/AuthReducer/AuthReducer\";\r\nimport {AppReducer} from \"../Components/reducers/appReducer/appReducer\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage:ProfileReducer,\r\n    dialogPage:DialogReducer,\r\n    usersPage: UserReducer,\r\n    auth: AuthUserReducer,\r\n    app: AppReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer,  composeEnhancers(applyMiddleware(thunk)));\r\nwindow.store = store","import React, {Suspense} from \"react\";\r\n\r\nexport const withSuspence = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Loading ... </div>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n};","import React from 'react';\nimport {Route,Switch} from 'react-router-dom';\nimport HeaderContainer from \"./Containers/HeaderContainer\";\nimport Nav from \"./Components/Nav-bar/Nav\";\nimport ProfileContainer from \"./Containers/ProfileContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {initializeApp} from \"./Components/reducers/appReducer/appReducer\";\nimport './App.css';\nimport {Preloader} from \"./Components/Common/Preloader/Preloader\";\nimport {Provider} from 'react-redux'\nimport {store} from \"./redux-store/store\";\nimport {HashRouter} from \"react-router-dom\";\nimport {withSuspence} from './HOC/withSuspence'\n\nconst DialogContainer = React.lazy(() => import(\"./Containers/DialogContainer\"));\nconst UserContainer = React.lazy(() => import(\"./Containers/UsersContainer\"));\nconst Login = React.lazy(() => import(\"./Components/Login/Login\"))\n\nclass App extends React.Component{\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if(!this.props.initialized) return <Preloader/>\n        return (\n        <div className='app-wrapper'>\n            <HeaderContainer/>\n            <Nav/>\n            <div className='app-wrappper-content'>\n                <Switch>\n                    <Route path='/profile/:userId?'  render={() => <ProfileContainer /> } />\n                    <Route path='/dialogs' render={ withSuspence (DialogContainer)  } />\n                    <Route path='/user' render={withSuspence (UserContainer )}/>\n                    <Route path='/login' render={withSuspence(Login)}/>\n                </Switch>\n            </div>\n        </div>\n    );\n}\n}\n\nconst mapStateToProps = state => {\n    return {\n        initialized: state.app.initialized\n    }\n};\n\nconst AppContainer =  compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App);\n\nconst AppNetwork = () => {\n    return <HashRouter>\n    <Provider store={store}>\n        <AppContainer/>\n    </Provider>\n</HashRouter>\n}\n\nexport default AppNetwork;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"MyPosts is cached for offline use.\" message.\n              console.log('MyPosts is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppNetwork from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<AppNetwork/>, document.getElementById('root'));\n\nserviceWorker.unregister()\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormMessage_form__3w5-E\",\"buttonSend\":\"FormMessage_buttonSend__sagr7\",\"buttonContainer\":\"FormMessage_buttonContainer__10Vsi\",\"buttonContainerCenter\":\"FormMessage_buttonContainerCenter__3UaMV\",\"spanContacts\":\"FormMessage_spanContacts__1eJy3\"};","export let styleTextarea = {\r\n    border: '1px solid rgba(29, 171, 255, 0.53)',\r\n    width: '450px',\r\n    color: 'rgba(29, 171, 255, 0.53)',\r\n    borderRadius: '20px',\r\n    padding: '10px',\r\n    resize: 'none',\r\n    margin: '20px 0'\r\n}\r\n\r\nexport let styleInput = {\r\n    border: '1px solid rgba(29, 171, 255, 0.53)',\r\n    width: '250px',\r\n    color: 'black',\r\n    borderRadius: '20px',\r\n    padding: '10px',\r\n    margin: '10px 0'\r\n}\r\n\r\nexport let styleTextareaDataProfile = {\r\n    border: '1px solid rgba(29, 171, 255, 0.53)',\r\n    width: '250px',\r\n    color: 'black',\r\n    borderRadius: '20px',\r\n    padding: '10px',\r\n    resize: 'none',\r\n    margin: '10px 0'\r\n}","import {authAPI, securityAPI} from \"../../../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst AUTH_USER = 'network/auth/AUTH_USER';\r\nconst GET_CAPTCHA = 'network/auth/GET_CAPTCHA';\r\n\r\nconst initialState = {\r\n    email: null,\r\n    userId: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaURL: null\r\n};\r\n\r\nexport const AuthUserReducer = (state=initialState,action) =>  {\r\n    switch (action.type) {\r\n        case AUTH_USER :\r\n        case GET_CAPTCHA :\r\n            return {...state, ...action.payload};\r\n        default: return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setAuthUser = (id,email,login, isAuth) => ({type:AUTH_USER, payload:{id,email,login, isAuth}});\r\nconst getCaptchaURL = (captchaURL) => ({type: GET_CAPTCHA, payload: {captchaURL}})\r\n\r\nexport const getAuth = () => async(dispatch) => {\r\n    let responce = await  authAPI.me();\r\n    if(responce.resultCode === 0){\r\n        let {id,email,login} = responce.data;\r\n        dispatch(setAuthUser(id,email,login,true))\r\n            }\r\n    };\r\n\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async(dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha)\r\n        if(response.resultCode === 0){\r\n            dispatch(getAuth())\r\n        }else {\r\n            if (response.resultCode === 10){\r\n                dispatch( getCaptchaURLSuccess())\r\n            }\r\n            let message = response.messages.length > 0 ? response.messages[0] : 'Some error';\r\n            dispatch( stopSubmit('login', {_error: `${message}`}))\r\n        }\r\n    };\r\n\r\nexport const logout = () => async(dispatch) => {\r\n    let response = await authAPI.logout()\r\n        if(response.resultCode === 0) {\r\n            dispatch(setAuthUser(null,null,null,false))\r\n        }\r\n}\r\n\r\nexport const getCaptchaURLSuccess = () => async(dispatch) => {\r\n    let response = await securityAPI.getCaptchaURL();\r\n    const captchaURL = response.url;\r\n    dispatch(getCaptchaURL(captchaURL))\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Yxksj\",\"loginBlock\":\"Header_loginBlock__19i_E\",\"login\":\"Header_login__zPWzX\",\"logoutButton\":\"Header_logoutButton__2X9e2\"};","export const required = value =>\r\n    value ? undefined: 'Field is required!';\r\n\r\nexport const maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3wpje\",\"avatar\":\"Post_avatar__26x72\",\"imgWrapper\":\"Post_imgWrapper__na6JD\",\"textPost\":\"Post_textPost__PtXsN\"};","import React from \"react\";\r\nimport preloader from \"../../../etc/img/Eclipse-1s-200px.svg\"\r\n\r\nexport const Preloader = () => {\r\n    return <div>\r\n        <img src={preloader} alt=\"preloader\"/>\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__2m4tw\",\"error\":\"FormControl_error__2yWC2\",\"formSummeryError\":\"FormControl_formSummeryError__2bHGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgProfile\":\"MyPosts_imgProfile__WKkgr\",\"postsContainer\":\"MyPosts_postsContainer__52XU2\"};"],"sourceRoot":""}